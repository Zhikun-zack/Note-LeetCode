"""O(n) O(1)"""
class SparseVector:
    def __init__(self, nums: List[int]):
        self.array = nums

    # Return the dotProduct of two sparse vectors
    def dotProduct(self, vec: 'SparseVector') -> int:
        res = 0
        for num1, num2 in zip(self.array, vec.array):
            res += num1 * num2
        return res
# Your SparseVector object will be instantiated and called as such:
"""Sparsevector is the object that we created 
dotProduct is one of the function for that object
you can visit values of v1 through self and you can also visit v2 through vec"""
# v1 = SparseVector(nums1)
# v2 = SparseVector(nums2)
# ans = v1.dotProduct(v2)
