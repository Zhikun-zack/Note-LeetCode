"""
O(N) O(A) A<26
HashMap
Ceate a hashmap: key is char value is the position
if that char is unique, value is its position
else, value is -1

Two loops
first create the hashmap
second find the char with the smallest value and != -1

Benefit
second loop only loop for the items in hashmap instead
of elemnts in array list"""
class Solution:
    def firstUniqChar(self, s: str) -> int:
        position = dict()
        n = len(s)
        for i, ch in enumerate(s):
            if ch in position:
                position[ch] = -1
            else:
                position[ch] = i
        first = n
        for pos in position.values():
            if pos != -1 and pos < first:
                first = pos
        if first == n:
            first = -1
        return first
