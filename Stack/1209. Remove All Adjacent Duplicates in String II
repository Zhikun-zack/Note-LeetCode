class Solution:
    def removeDuplicates(self, s: str, k: int) -> str:
        n = len(s)
        #store [char, time]
        stack = []
        for c in s:
            #if char is not equal to current value, append 
            if not stack or stack[-1][0] != c:
                stack.append([c, 1])
            #if appearing time of char is less than k, update time
            elif stack[-1][1] + 1 < k:
                stack[-1][1] += 1
            #if appearing time is 3, pop
            else:
                stack.pop()
        ans = ""
        for c, l in stack:
            ans += c * l
        return ans
