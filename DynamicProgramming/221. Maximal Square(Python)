class Solution:
    def maximalSquare(self, matrix: List[List[str]]) -> int:
        if len(matrix) == 0 or len(matrix[0]) == 0:
            return 0
        
        maxSide = 0
        rows, columns = len(matrix), len(matrix[0])
        dp = [[0] * columns for _ in range(rows)]
        for i in range(rows):
            for j in range(columns):
                # only when matrix is 1 can we execute the codes below
                if matrix[i][j] == '1':
                    # init
                    if i == 0 or j == 0:
                        dp[i][j] = 1
                    # if i-1 j-1, i-1 j, i j-1 are all the same, then i j == i-1 j-1 + 1
                    # else i j is equal to matrix i j
                    else:
                        dp[i][j] = min(dp[i - 1][j], dp[i][j - 1], dp[i - 1][j - 1]) + 1
                    maxSide = max(maxSide, dp[i][j])
        
        maxSquare = maxSide * maxSide
        return maxSquare
        
        
