"""
words按照字符串长度排序
check函数用于判断是否子序列
状态定义：以words[i]为结尾的最长子序列长度
状态转移：遍历j=1..i-1之间： dp[i] = max(dp[i],dp[j]+1)
"""
class Solution:
    def longestStrChain(self, words: List[str]) -> int:
        def check(x,y):
            m,n = len(x),len(y)
            # add exactly one letter
            if m+1 != n:return False
            i,j = 0,0
            while i<m and j<n:
                if x[i] == y[j]:i+=1
                j += 1
            return i == len(x) 

        words.sort(key = lambda x : len(x))
        n = len(words)
        dp = [1]*n
        res = 0
        for i in range(n):
            for j in range(i):
                if check(words[j],words[i]):
                    dp[i] = max(dp[i],dp[j]+1)
            res = max(res,dp[i])
        return res
