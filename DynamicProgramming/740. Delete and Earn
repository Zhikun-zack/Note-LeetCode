class Solution:
    def deleteAndEarn(self, nums: List[int]) -> int:
        #max value in nums
        maxVal = max(nums)
        #count the frequency 
        count = [0] * (maxVal + 1)
        #count the value frequency
        for i in nums:
            count[i] += 1
        #max value that we can get with the value from 0 to i
        #0 means we dont take number i
        #1 means we take number i
        dp = [[0] * 2 for _ in range(maxVal+1)]
        
        for i in range(1, maxVal + 1):
            #if we dont take i, max value of i will be max value of former two
            dp[i][0] = max(dp[i-1][1], dp[i-1][0])
            #if we take i, then we cannot use the i-1 1 value
            dp[i][1] = dp[i-1][0] + count[i] * i
            
        return max(dp[maxVal][1], dp[maxVal][0])
